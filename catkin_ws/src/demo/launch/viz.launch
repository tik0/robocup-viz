<?xml version="1.0"?>
 <launch>

  <arg name="map_image_path" default="/opt/repositories/robocup-viz/maps/centralLab.png" />
  <arg name="map_resolution" default="0.1" />

  <!-- publishes the map -->
  <node pkg="map_publisher" type="map_publisher" name="map_publisher_node" respawn="true" >
    <param name="frame_id" value="map" />
    <param name="map_image_path" value="$(arg map_image_path)" />
    <param name="map_topic" value="map" />
    <param name="image_resolution" value="$(arg map_resolution)" /> <!-- m/cell -->
    <param name="rate" value="1" />
  </node>

  <!-- converts RSB poses to ROS transform -->
  <node pkg="pose_to_tf_bridge" type="pose_to_tf_bridge" name="pose_to_tf_bridge_amiro1_node" respawn="true" >
    <param name="frame_id" value="world" />
    <param name="child_frame" value="amiro1" />
    <param name="rsb_scope" value="/amiro1/pose" />
    <param name="rate" value="10" />
  </node>

  <node pkg="pose_to_tf_bridge" type="pose_to_tf_bridge" name="pose_to_tf_bridge_amiro2_node" respawn="true" >
    <param name="frame_id" value="world" />
    <param name="child_frame" value="amiro2" />
    <param name="rsb_scope" value="/amiro2/pose" />
    <param name="rate" value="10" />
  </node>

  <node pkg="pose_to_tf_bridge" type="pose_to_tf_bridge" name="pose_to_tf_bridge_tobi_node" respawn="true" >
    <param name="frame_id" value="world" />
    <param name="child_frame" value="tobi" />
    <param name="rsb_scope" value="/tobi/pose" />
    <param name="rate" value="10" />
  </node>

  <!-- convert ROS pose to RSB pose (for setting current pose) -->
  <node pkg="rospose_to_rsbpose_bridge" type="rospose_to_rsbpose_bridge" name="rospose_to_rsbpose_bridge_node_1" respawn="true" >
    <param name="rsb_scope" value="/setPosition/1" />
    <param name="ros_topic" value="/initialpose/1" />
  </node>
  
  <node pkg="rospose_to_rsbpose_bridge" type="rospose_to_rsbpose_bridge" name="rospose_to_rsbpose_bridge_node_0" respawn="true" >
    <param name="rsb_scope" value="/setPosition/0" />
    <param name="ros_topic" value="/initialpose/0" />
  </node>
  
  <!-- convert ROS pose to RSB pose (for setting navigation goal) -->
  <node pkg="navgoal_to_rsbpose_bridge" type="navgoal_to_rsbpose_bridge" name="navgoal_to_rsbpose_bridge_node_1" respawn="true" >
    <param name="rsb_scope" value="/setTargetPose/1" />
    <param name="ros_topic" value="/move_base_simple/goal/1" />
  </node>
  
  <node pkg="rospose_to_rsbpose_bridge" type="rospose_to_rsbpose_bridge" name="rosnavgoal_to_rsbpose_bridge_node_0" respawn="true" >
    <param name="rsb_scope" value="/setTargetPose/0" />
    <param name="ros_topic" value="/move_base_simple/goal/0" />
  </node>

  <!-- display path -->
  <node pkg="rsb_path_to_ros_path" type="rsb_path_to_ros_path_node" name="rsb_path_to_ros_path_node_1" respawn="true">
    <param name="rsb_scope" value="/amiro1/path" />
    <param name="ros_topic" value="/amiro1/path" />
  </node>
  
  <node pkg="rsb_path_to_ros_path" type="rsb_path_to_ros_path_node" name="rsb_path_to_ros_path_node_0" respawn="true">
    <param name="rsb_scope" value="/amiro0/path" />
    <param name="ros_topic" value="/amiro0/path" />
  </node>

  <node pkg="tf" type="static_transform_publisher" name="map_tf" args="0 0 0 0 0 0 world map 10" />


  <!-- ROBOT MODELS: TOBI -->
  <node pkg="tf" type="static_transform_publisher" name="tobi_tf" args="10 12 0 1 0 0 world tobi/base_link 10"/>
  <include file="$(find demo)/launch/robot_viz.xml">
    <arg name="description" value="$(find xacro)/xacro.py $(find tobi_description)/urdf/tobi_3of4.urdf.xacro" />
    <arg name="use_joint_state_publisher" value="true"/>
    <arg name="gui" value="true" />  
    <arg name="model_prefix" value="tobi" />
  </include>
  
  <!-- ROBOT MODELS: MEKA -->
  <node pkg="tf" type="static_transform_publisher" name="meka_tf" args="10 10 0 1 0 0 world meka/base_link 10"/>
  <include file="$(find demo)/launch/robot_viz.xml">
    <arg name="description" value="$(find xacro)/xacro.py $(find meka_description)/robots/bie.urdf.xacro hand_mimic:=true torso_mimic:=true" />
    <arg name="use_joint_state_publisher" value="true"/>
    <arg name="gui" value="true" />  
    <arg name="model_prefix" value="meka" />
  </include>
  
  <!-- ROBOT MODELS: AMiRo1 -->
<!--  <node pkg="tf" type="static_transform_publisher" name="meka_tf" args="12 12 0 1 0 0 world amiro1/base_link 10"/>
  <include file="$(find demo)/launch/robot_viz.xml">
    <arg name="description" value="$(find xacro)/xacro.py $(find meka_description)/robots/bie.urdf.xacro hand_mimic:=true torso_mimic:=true" />
    <arg name="use_joint_state_publisher" value="false"/>
    <arg name="gui" value="false" />  
    <arg name="model_prefix" type="string" value="amiro1" />
  </include>-->
  
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find demo)/demo.rviz" respawn="true" />
 </launch>
